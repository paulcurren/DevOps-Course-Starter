name: Continuous Integration

on:
  push:
    paths-ignore:
      - 'documentation/**'
      - 'README.md'
  pull_request:
    types:
      - closed

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build --target test --tag todo-app:test .
      - run: docker run --env-file .env.test todo-app:test
 
  docker-publish:
    name: publish image to Docker
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event.pull_request.merged
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERTOKEN }}

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build production image
        run: docker build --target production --tag paulcurren/todo-app:prod .
 
      - name: Publish 'prod' image to Docker Hub
        run: docker push paulcurren/todo-app:prod

      - name: Deploy to Azure Web App
        run: curl -dH -X POST ${{ secrets.AZURE_WEB_HOOK }}

  azure-deploy:
    name: deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: docker-publish
    steps:
      - name: Deploy to Azure Web App
        run: curl -dH -X POST ${{ secrets.AZURE_WEB_HOOK }}

  terraform-deploy:
    name: deploy to Azure
    runs-on: ubuntu-latest
#    if: github.event.pull_request.merged

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
